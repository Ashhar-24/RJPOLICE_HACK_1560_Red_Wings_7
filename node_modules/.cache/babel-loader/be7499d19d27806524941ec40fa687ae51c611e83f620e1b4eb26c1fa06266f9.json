{"ast":null,"code":"var _jsxFileName = \"D:\\\\fraud-detection-app\\\\src\\\\components\\\\moneyFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TransactionLogs from \"./TransactionLogs\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./MoneyFlow.css\";\nimport tdata from \"./a.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoneyFlow = () => {\n  _s();\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(\"UPI\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [transactionData, setTransactionData] = useState([]);\n  console.log(tdata);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"./a.json\");\n        const data = await response.json();\n        setTransactionData(data);\n        console.log(\"Data fetched \");\n      } catch (error) {\n        console.error(\"Error reading transaction data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  // useEffect(() => {\n  //   const fetchData = () => {\n  //     try {\n  //       // Access the environment variable and parse it as JSON\n  //       const jsonData = JSON.parse(process.env.DATA);\n\n  //       setTransactionData(jsonData);\n  //       console.log('Data fetched:', jsonData);\n  //     } catch (error) {\n  //       console.error('Error reading transaction data:', error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  // Filter transactions based on the selected payment method\n  const filteredTransactions = transactionData.filter(transaction => transaction.method === selectedPaymentMethod);\n\n  // total money transferred\n  const totalMoneyTransferred = filteredTransactions.reduce((total, transaction) => total + parseFloat(transaction.amount || 0), 0).toFixed(2);\n\n  // total accounts involved\n  const totalAccountsInvolved = new Set([...filteredTransactions.map(transaction => transaction.senderAccount), ...filteredTransactions.map(transaction => transaction.receiverAccount)]).size;\n\n  //number of accounts with fraud\n  const numberOfAccountsWithFraud = filteredTransactions.filter(transaction => transaction.isSuspicious === true).length;\n\n  // Pagination\n  const transactionsPerPage = 10;\n  const indexOfLastTransaction = currentPage * transactionsPerPage;\n  const indexOfFirstTransaction = indexOfLastTransaction - transactionsPerPage;\n  const currentTransactions = filteredTransactions.slice(indexOfFirstTransaction, indexOfLastTransaction);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(MoneyFlow, \"9eja4h8wM0mxwjsZzXLHjtxaM7s=\");\n_c = MoneyFlow;\nexport default MoneyFlow;\nvar _c;\n$RefreshReg$(_c, \"MoneyFlow\");","map":{"version":3,"names":["React","useState","useEffect","TransactionLogs","tdata","jsxDEV","_jsxDEV","MoneyFlow","_s","selectedPaymentMethod","setSelectedPaymentMethod","currentPage","setCurrentPage","transactionData","setTransactionData","console","log","fetchData","response","fetch","data","json","error","filteredTransactions","filter","transaction","method","totalMoneyTransferred","reduce","total","parseFloat","amount","toFixed","totalAccountsInvolved","Set","map","senderAccount","receiverAccount","size","numberOfAccountsWithFraud","isSuspicious","length","transactionsPerPage","indexOfLastTransaction","indexOfFirstTransaction","currentTransactions","slice","paginate","pageNumber","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/fraud-detection-app/src/components/moneyFlow.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TransactionLogs from \"./TransactionLogs\"; \r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./MoneyFlow.css\";\r\nimport tdata from \"./a.json\";\r\nconst MoneyFlow = () => {\r\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(\"UPI\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [transactionData, setTransactionData] = useState([]);\r\n   console.log(tdata);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"./a.json\");\r\n        const data = await response.json();\r\n        setTransactionData(data);\r\n        console.log(\"Data fetched \")\r\n      } catch(error){\r\n        console.error(\"Error reading transaction data:\",error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   const fetchData = () => {\r\n  //     try {\r\n  //       // Access the environment variable and parse it as JSON\r\n  //       const jsonData = JSON.parse(process.env.DATA);\r\n\r\n  //       setTransactionData(jsonData);\r\n  //       console.log('Data fetched:', jsonData);\r\n  //     } catch (error) {\r\n  //       console.error('Error reading transaction data:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  // Filter transactions based on the selected payment method\r\n  const filteredTransactions = transactionData.filter(\r\n    (transaction) => transaction.method === selectedPaymentMethod\r\n  );\r\n\r\n  // total money transferred\r\n  const totalMoneyTransferred = filteredTransactions\r\n    .reduce(\r\n      (total, transaction) => total + parseFloat(transaction.amount || 0),\r\n      0\r\n    )\r\n    .toFixed(2);\r\n\r\n  // total accounts involved\r\n  const totalAccountsInvolved = new Set([\r\n    ...filteredTransactions.map((transaction) => transaction.senderAccount),\r\n    ...filteredTransactions.map((transaction) => transaction.receiverAccount),\r\n  ]).size;\r\n\r\n  //number of accounts with fraud\r\n  const numberOfAccountsWithFraud = filteredTransactions.filter(\r\n    (transaction) => transaction.isSuspicious === true\r\n  ).length;\r\n\r\n  // Pagination\r\n  const transactionsPerPage = 10;\r\n  const indexOfLastTransaction = currentPage * transactionsPerPage;\r\n  const indexOfFirstTransaction = indexOfLastTransaction - transactionsPerPage;\r\n  const currentTransactions = filteredTransactions.slice(\r\n    indexOfFirstTransaction,\r\n    indexOfLastTransaction\r\n  );\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoneyFlow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,sCAAsC;AAC7C,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACzDc,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EACnBF,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,CAAC;QACxC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,kBAAkB,CAACM,IAAI,CAAC;QACxBL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC9B,CAAC,CAAC,OAAMM,KAAK,EAAC;QACZP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAACA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA,MAAMM,oBAAoB,GAAGV,eAAe,CAACW,MAAM,CAChDC,WAAW,IAAKA,WAAW,CAACC,MAAM,KAAKjB,qBAC1C,CAAC;;EAED;EACA,MAAMkB,qBAAqB,GAAGJ,oBAAoB,CAC/CK,MAAM,CACL,CAACC,KAAK,EAAEJ,WAAW,KAAKI,KAAK,GAAGC,UAAU,CAACL,WAAW,CAACM,MAAM,IAAI,CAAC,CAAC,EACnE,CACF,CAAC,CACAC,OAAO,CAAC,CAAC,CAAC;;EAEb;EACA,MAAMC,qBAAqB,GAAG,IAAIC,GAAG,CAAC,CACpC,GAAGX,oBAAoB,CAACY,GAAG,CAAEV,WAAW,IAAKA,WAAW,CAACW,aAAa,CAAC,EACvE,GAAGb,oBAAoB,CAACY,GAAG,CAAEV,WAAW,IAAKA,WAAW,CAACY,eAAe,CAAC,CAC1E,CAAC,CAACC,IAAI;;EAEP;EACA,MAAMC,yBAAyB,GAAGhB,oBAAoB,CAACC,MAAM,CAC1DC,WAAW,IAAKA,WAAW,CAACe,YAAY,KAAK,IAChD,CAAC,CAACC,MAAM;;EAER;EACA,MAAMC,mBAAmB,GAAG,EAAE;EAC9B,MAAMC,sBAAsB,GAAGhC,WAAW,GAAG+B,mBAAmB;EAChE,MAAME,uBAAuB,GAAGD,sBAAsB,GAAGD,mBAAmB;EAC5E,MAAMG,mBAAmB,GAAGtB,oBAAoB,CAACuB,KAAK,CACpDF,uBAAuB,EACvBD,sBACF,CAAC;EAED,MAAMI,QAAQ,GAAIC,UAAU,IAAKpC,cAAc,CAACoC,UAAU,CAAC;EAE3D,oBACE1C,OAAA;IAAK2C,SAAS,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErB,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA3EID,SAAS;AAAA+C,EAAA,GAAT/C,SAAS;AA6Ef,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}